ARM GAS  /tmp/ccsHMghP.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.Error_Handler,"ax",%progbits
  21              		.align	1
  22              		.global	Error_Handler
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	Error_Handler:
  28              	.LFB137:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "gpio.h"
  22:Core/Src/main.c **** #include "spi.h"
  23:Core/Src/main.c **** #include "usart.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include <stdio.h>
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/ccsHMghP.s 			page 2


  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** uint8_t rx_buffer;
  49:Core/Src/main.c **** uint8_t tx_buffer;
  50:Core/Src/main.c **** /* USER CODE END PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  53:Core/Src/main.c **** void SystemClock_Config(void);
  54:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE END PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  59:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /**
  64:Core/Src/main.c ****  * @brief  The application entry point.
  65:Core/Src/main.c ****  * @retval int
  66:Core/Src/main.c ****  */
  67:Core/Src/main.c **** int main(void) {
  68:Core/Src/main.c **** 
  69:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****     /* USER CODE END 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****     /* MCU
  74:Core/Src/main.c ****      * Configuration--------------------------------------------------------*/
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****     /* Reset of all peripherals, Initializes the Flash interface and the
  77:Core/Src/main.c ****      * Systick. */
  78:Core/Src/main.c ****     HAL_Init();
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****     /* USER CODE BEGIN Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****     /* USER CODE END Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****     /* Configure the system clock */
  85:Core/Src/main.c ****     SystemClock_Config();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****     /* USER CODE BEGIN SysInit */
ARM GAS  /tmp/ccsHMghP.s 			page 3


  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****     /* USER CODE END SysInit */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****     /* Initialize all configured peripherals */
  92:Core/Src/main.c ****     MX_GPIO_Init();
  93:Core/Src/main.c ****     MX_SPI1_Init();
  94:Core/Src/main.c ****     MX_LPUART1_UART_Init();
  95:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
  96:Core/Src/main.c ****     rx_buffer = 'a';
  97:Core/Src/main.c ****     tx_buffer = 'z';
  98:Core/Src/main.c ****     /* USER CODE END 2 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****     /* Infinite loop */
 101:Core/Src/main.c ****     /* USER CODE BEGIN WHILE */
 102:Core/Src/main.c ****     while (1) {
 103:Core/Src/main.c ****         if (HAL_SPI_Transmit(&hspi1, &tx_buffer, 1, 1000) != HAL_OK) {
 104:Core/Src/main.c ****             // error
 105:Core/Src/main.c ****         }
 106:Core/Src/main.c ****         HAL_Delay(100);
 107:Core/Src/main.c ****         if (HAL_SPI_Receive(&hspi1, &rx_buffer, 1, 1000) != HAL_OK) {
 108:Core/Src/main.c ****             // error
 109:Core/Src/main.c ****         }
 110:Core/Src/main.c ****         HAL_Delay(100);
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****         if (rx_buffer == tx_buffer) {
 113:Core/Src/main.c ****             // something
 114:Core/Src/main.c ****         }
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****         char buffer[2 + 1];
 117:Core/Src/main.c ****         snprintf(buffer, sizeof buffer, "%c\n", rx_buffer);
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****         HAL_UART_Transmit(&hlpuart1, (uint8_t *)buffer, 3, 1000);
 120:Core/Src/main.c ****         HAL_Delay(1000);
 121:Core/Src/main.c ****         /* USER CODE END WHILE */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****         /* USER CODE BEGIN 3 */
 124:Core/Src/main.c ****     }
 125:Core/Src/main.c ****     /* USER CODE END 3 */
 126:Core/Src/main.c **** }
 127:Core/Src/main.c **** 
 128:Core/Src/main.c **** /**
 129:Core/Src/main.c ****  * @brief System Clock Configuration
 130:Core/Src/main.c ****  * @retval None
 131:Core/Src/main.c ****  */
 132:Core/Src/main.c **** void SystemClock_Config(void) {
 133:Core/Src/main.c ****     RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 134:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****     /** Configure the main internal regulator output voltage
 137:Core/Src/main.c ****      */
 138:Core/Src/main.c ****     HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST);
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
 141:Core/Src/main.c ****      * in the RCC_OscInitTypeDef structure.
 142:Core/Src/main.c ****      */
 143:Core/Src/main.c ****     RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 144:Core/Src/main.c ****     RCC_OscInitStruct.HSIState = RCC_HSI_ON;
ARM GAS  /tmp/ccsHMghP.s 			page 4


 145:Core/Src/main.c ****     RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 146:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 147:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 148:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV4;
 149:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN = 85;
 150:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 151:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 152:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 153:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 154:Core/Src/main.c ****         Error_Handler();
 155:Core/Src/main.c ****     }
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****     /** Initializes the CPU, AHB and APB buses clocks
 158:Core/Src/main.c ****      */
 159:Core/Src/main.c ****     RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK |
 160:Core/Src/main.c ****                                   RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 161:Core/Src/main.c ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 162:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 163:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 164:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****     if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK) {
 167:Core/Src/main.c ****         Error_Handler();
 168:Core/Src/main.c ****     }
 169:Core/Src/main.c **** }
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** /* USER CODE END 4 */
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** /**
 176:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 177:Core/Src/main.c ****  * @retval None
 178:Core/Src/main.c ****  */
 179:Core/Src/main.c **** void Error_Handler(void) {
  29              		.loc 1 179 26 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 180:Core/Src/main.c ****     /* USER CODE BEGIN Error_Handler_Debug */
 181:Core/Src/main.c ****     /* User can add his own implementation to report the HAL error return state
 182:Core/Src/main.c ****      */
 183:Core/Src/main.c ****     __disable_irq();
  35              		.loc 1 183 5 view .LVU1
  36              	.LBB4:
  37              	.LBI4:
  38              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
ARM GAS  /tmp/ccsHMghP.s 			page 5


   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
ARM GAS  /tmp/ccsHMghP.s 			page 6


  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
ARM GAS  /tmp/ccsHMghP.s 			page 7


 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccsHMghP.s 			page 8


 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  39              		.loc 2 207 27 view .LVU2
  40              	.LBB5:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  41              		.loc 2 209 3 view .LVU3
  42              		.syntax unified
  43              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0000 72B6     		cpsid i
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.L2:
  49              	.LBE5:
  50              	.LBE4:
 184:Core/Src/main.c ****     while (1) {
  51              		.loc 1 184 5 discriminator 1 view .LVU4
 185:Core/Src/main.c ****     }
  52              		.loc 1 185 5 discriminator 1 view .LVU5
 184:Core/Src/main.c ****     while (1) {
  53              		.loc 1 184 11 discriminator 1 view .LVU6
  54 0002 FEE7     		b	.L2
  55              		.cfi_endproc
  56              	.LFE137:
  58              		.section	.text.SystemClock_Config,"ax",%progbits
  59              		.align	1
  60              		.global	SystemClock_Config
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
ARM GAS  /tmp/ccsHMghP.s 			page 9


  65              	SystemClock_Config:
  66              	.LFB136:
 132:Core/Src/main.c ****     RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  67              		.loc 1 132 31 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 80
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71 0000 00B5     		push	{lr}
  72              		.cfi_def_cfa_offset 4
  73              		.cfi_offset 14, -4
  74 0002 95B0     		sub	sp, sp, #84
  75              		.cfi_def_cfa_offset 88
 133:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  76              		.loc 1 133 5 view .LVU8
 133:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  77              		.loc 1 133 24 is_stmt 0 view .LVU9
  78 0004 3822     		movs	r2, #56
  79 0006 0021     		movs	r1, #0
  80 0008 06A8     		add	r0, sp, #24
  81 000a FFF7FEFF 		bl	memset
  82              	.LVL0:
 134:Core/Src/main.c **** 
  83              		.loc 1 134 5 is_stmt 1 view .LVU10
 134:Core/Src/main.c **** 
  84              		.loc 1 134 24 is_stmt 0 view .LVU11
  85 000e 0020     		movs	r0, #0
  86 0010 0190     		str	r0, [sp, #4]
  87 0012 0290     		str	r0, [sp, #8]
  88 0014 0390     		str	r0, [sp, #12]
  89 0016 0490     		str	r0, [sp, #16]
  90 0018 0590     		str	r0, [sp, #20]
 138:Core/Src/main.c **** 
  91              		.loc 1 138 5 is_stmt 1 view .LVU12
  92 001a FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
  93              	.LVL1:
 143:Core/Src/main.c ****     RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  94              		.loc 1 143 5 view .LVU13
 143:Core/Src/main.c ****     RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  95              		.loc 1 143 38 is_stmt 0 view .LVU14
  96 001e 0223     		movs	r3, #2
  97 0020 0693     		str	r3, [sp, #24]
 144:Core/Src/main.c ****     RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  98              		.loc 1 144 5 is_stmt 1 view .LVU15
 144:Core/Src/main.c ****     RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  99              		.loc 1 144 32 is_stmt 0 view .LVU16
 100 0022 4FF48072 		mov	r2, #256
 101 0026 0992     		str	r2, [sp, #36]
 145:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 102              		.loc 1 145 5 is_stmt 1 view .LVU17
 145:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 103              		.loc 1 145 43 is_stmt 0 view .LVU18
 104 0028 4022     		movs	r2, #64
 105 002a 0A92     		str	r2, [sp, #40]
 146:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 106              		.loc 1 146 5 is_stmt 1 view .LVU19
 146:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 107              		.loc 1 146 36 is_stmt 0 view .LVU20
ARM GAS  /tmp/ccsHMghP.s 			page 10


 108 002c 0D93     		str	r3, [sp, #52]
 147:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV4;
 109              		.loc 1 147 5 is_stmt 1 view .LVU21
 147:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV4;
 110              		.loc 1 147 37 is_stmt 0 view .LVU22
 111 002e 0E93     		str	r3, [sp, #56]
 148:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN = 85;
 112              		.loc 1 148 5 is_stmt 1 view .LVU23
 148:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN = 85;
 113              		.loc 1 148 32 is_stmt 0 view .LVU24
 114 0030 0422     		movs	r2, #4
 115 0032 0F92     		str	r2, [sp, #60]
 149:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 116              		.loc 1 149 5 is_stmt 1 view .LVU25
 149:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 117              		.loc 1 149 32 is_stmt 0 view .LVU26
 118 0034 5522     		movs	r2, #85
 119 0036 1092     		str	r2, [sp, #64]
 150:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 120              		.loc 1 150 5 is_stmt 1 view .LVU27
 150:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 121              		.loc 1 150 32 is_stmt 0 view .LVU28
 122 0038 1193     		str	r3, [sp, #68]
 151:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 123              		.loc 1 151 5 is_stmt 1 view .LVU29
 151:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 124              		.loc 1 151 32 is_stmt 0 view .LVU30
 125 003a 1293     		str	r3, [sp, #72]
 152:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 126              		.loc 1 152 5 is_stmt 1 view .LVU31
 152:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 127              		.loc 1 152 32 is_stmt 0 view .LVU32
 128 003c 1393     		str	r3, [sp, #76]
 153:Core/Src/main.c ****         Error_Handler();
 129              		.loc 1 153 5 is_stmt 1 view .LVU33
 153:Core/Src/main.c ****         Error_Handler();
 130              		.loc 1 153 9 is_stmt 0 view .LVU34
 131 003e 06A8     		add	r0, sp, #24
 132 0040 FFF7FEFF 		bl	HAL_RCC_OscConfig
 133              	.LVL2:
 153:Core/Src/main.c ****         Error_Handler();
 134              		.loc 1 153 8 view .LVU35
 135 0044 80B9     		cbnz	r0, .L7
 159:Core/Src/main.c ****                                   RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 136              		.loc 1 159 5 is_stmt 1 view .LVU36
 159:Core/Src/main.c ****                                   RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 137              		.loc 1 159 33 is_stmt 0 view .LVU37
 138 0046 0F23     		movs	r3, #15
 139 0048 0193     		str	r3, [sp, #4]
 161:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 140              		.loc 1 161 5 is_stmt 1 view .LVU38
 161:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 141              		.loc 1 161 36 is_stmt 0 view .LVU39
 142 004a 0323     		movs	r3, #3
 143 004c 0293     		str	r3, [sp, #8]
 162:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 144              		.loc 1 162 5 is_stmt 1 view .LVU40
ARM GAS  /tmp/ccsHMghP.s 			page 11


 162:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 145              		.loc 1 162 37 is_stmt 0 view .LVU41
 146 004e 0023     		movs	r3, #0
 147 0050 0393     		str	r3, [sp, #12]
 163:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 148              		.loc 1 163 5 is_stmt 1 view .LVU42
 163:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 149              		.loc 1 163 38 is_stmt 0 view .LVU43
 150 0052 0493     		str	r3, [sp, #16]
 164:Core/Src/main.c **** 
 151              		.loc 1 164 5 is_stmt 1 view .LVU44
 164:Core/Src/main.c **** 
 152              		.loc 1 164 38 is_stmt 0 view .LVU45
 153 0054 0593     		str	r3, [sp, #20]
 166:Core/Src/main.c ****         Error_Handler();
 154              		.loc 1 166 5 is_stmt 1 view .LVU46
 166:Core/Src/main.c ****         Error_Handler();
 155              		.loc 1 166 9 is_stmt 0 view .LVU47
 156 0056 0421     		movs	r1, #4
 157 0058 0DEB0100 		add	r0, sp, r1
 158 005c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 159              	.LVL3:
 166:Core/Src/main.c ****         Error_Handler();
 160              		.loc 1 166 8 view .LVU48
 161 0060 20B9     		cbnz	r0, .L8
 169:Core/Src/main.c **** 
 162              		.loc 1 169 1 view .LVU49
 163 0062 15B0     		add	sp, sp, #84
 164              		.cfi_remember_state
 165              		.cfi_def_cfa_offset 4
 166              		@ sp needed
 167 0064 5DF804FB 		ldr	pc, [sp], #4
 168              	.L7:
 169              		.cfi_restore_state
 154:Core/Src/main.c ****     }
 170              		.loc 1 154 9 is_stmt 1 view .LVU50
 171 0068 FFF7FEFF 		bl	Error_Handler
 172              	.LVL4:
 173              	.L8:
 167:Core/Src/main.c ****     }
 174              		.loc 1 167 9 view .LVU51
 175 006c FFF7FEFF 		bl	Error_Handler
 176              	.LVL5:
 177              		.cfi_endproc
 178              	.LFE136:
 180              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 181              		.align	2
 182              	.LC0:
 183 0000 25630A00 		.ascii	"%c\012\000"
 184              		.section	.text.main,"ax",%progbits
 185              		.align	1
 186              		.global	main
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 191              	main:
 192              	.LFB135:
ARM GAS  /tmp/ccsHMghP.s 			page 12


  67:Core/Src/main.c **** 
 193              		.loc 1 67 16 view -0
 194              		.cfi_startproc
 195              		@ Volatile: function does not return.
 196              		@ args = 0, pretend = 0, frame = 8
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198 0000 00B5     		push	{lr}
 199              		.cfi_def_cfa_offset 4
 200              		.cfi_offset 14, -4
 201 0002 83B0     		sub	sp, sp, #12
 202              		.cfi_def_cfa_offset 16
  78:Core/Src/main.c **** 
 203              		.loc 1 78 5 view .LVU53
 204 0004 FFF7FEFF 		bl	HAL_Init
 205              	.LVL6:
  85:Core/Src/main.c **** 
 206              		.loc 1 85 5 view .LVU54
 207 0008 FFF7FEFF 		bl	SystemClock_Config
 208              	.LVL7:
  92:Core/Src/main.c ****     MX_SPI1_Init();
 209              		.loc 1 92 5 view .LVU55
 210 000c FFF7FEFF 		bl	MX_GPIO_Init
 211              	.LVL8:
  93:Core/Src/main.c ****     MX_LPUART1_UART_Init();
 212              		.loc 1 93 5 view .LVU56
 213 0010 FFF7FEFF 		bl	MX_SPI1_Init
 214              	.LVL9:
  94:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 215              		.loc 1 94 5 view .LVU57
 216 0014 FFF7FEFF 		bl	MX_LPUART1_UART_Init
 217              	.LVL10:
  96:Core/Src/main.c ****     tx_buffer = 'z';
 218              		.loc 1 96 5 view .LVU58
  96:Core/Src/main.c ****     tx_buffer = 'z';
 219              		.loc 1 96 15 is_stmt 0 view .LVU59
 220 0018 164B     		ldr	r3, .L12
 221 001a 6122     		movs	r2, #97
 222 001c 1A70     		strb	r2, [r3]
  97:Core/Src/main.c ****     /* USER CODE END 2 */
 223              		.loc 1 97 5 is_stmt 1 view .LVU60
  97:Core/Src/main.c ****     /* USER CODE END 2 */
 224              		.loc 1 97 15 is_stmt 0 view .LVU61
 225 001e 164B     		ldr	r3, .L12+4
 226 0020 7A22     		movs	r2, #122
 227 0022 1A70     		strb	r2, [r3]
 228              	.L10:
 102:Core/Src/main.c ****         if (HAL_SPI_Transmit(&hspi1, &tx_buffer, 1, 1000) != HAL_OK) {
 229              		.loc 1 102 5 is_stmt 1 view .LVU62
 230              	.LBB6:
 103:Core/Src/main.c ****             // error
 231              		.loc 1 103 9 view .LVU63
 103:Core/Src/main.c ****             // error
 232              		.loc 1 103 13 is_stmt 0 view .LVU64
 233 0024 154D     		ldr	r5, .L12+8
 234 0026 4FF47A73 		mov	r3, #1000
 235 002a 0122     		movs	r2, #1
 236 002c 1249     		ldr	r1, .L12+4
ARM GAS  /tmp/ccsHMghP.s 			page 13


 237 002e 2846     		mov	r0, r5
 238 0030 FFF7FEFF 		bl	HAL_SPI_Transmit
 239              	.LVL11:
 105:Core/Src/main.c ****         HAL_Delay(100);
 240              		.loc 1 105 9 is_stmt 1 view .LVU65
 106:Core/Src/main.c ****         if (HAL_SPI_Receive(&hspi1, &rx_buffer, 1, 1000) != HAL_OK) {
 241              		.loc 1 106 9 view .LVU66
 242 0034 6420     		movs	r0, #100
 243 0036 FFF7FEFF 		bl	HAL_Delay
 244              	.LVL12:
 107:Core/Src/main.c ****             // error
 245              		.loc 1 107 9 view .LVU67
 107:Core/Src/main.c ****             // error
 246              		.loc 1 107 13 is_stmt 0 view .LVU68
 247 003a 0E4C     		ldr	r4, .L12
 248 003c 4FF47A73 		mov	r3, #1000
 249 0040 0122     		movs	r2, #1
 250 0042 2146     		mov	r1, r4
 251 0044 2846     		mov	r0, r5
 252 0046 FFF7FEFF 		bl	HAL_SPI_Receive
 253              	.LVL13:
 109:Core/Src/main.c ****         HAL_Delay(100);
 254              		.loc 1 109 9 is_stmt 1 view .LVU69
 110:Core/Src/main.c **** 
 255              		.loc 1 110 9 view .LVU70
 256 004a 6420     		movs	r0, #100
 257 004c FFF7FEFF 		bl	HAL_Delay
 258              	.LVL14:
 112:Core/Src/main.c ****             // something
 259              		.loc 1 112 9 view .LVU71
 114:Core/Src/main.c **** 
 260              		.loc 1 114 9 view .LVU72
 116:Core/Src/main.c ****         snprintf(buffer, sizeof buffer, "%c\n", rx_buffer);
 261              		.loc 1 116 9 view .LVU73
 117:Core/Src/main.c **** 
 262              		.loc 1 117 9 view .LVU74
 263 0050 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 264 0052 0B4A     		ldr	r2, .L12+12
 265 0054 0321     		movs	r1, #3
 266 0056 01A8     		add	r0, sp, #4
 267 0058 FFF7FEFF 		bl	snprintf
 268              	.LVL15:
 119:Core/Src/main.c ****         HAL_Delay(1000);
 269              		.loc 1 119 9 view .LVU75
 270 005c 4FF47A73 		mov	r3, #1000
 271 0060 0322     		movs	r2, #3
 272 0062 01A9     		add	r1, sp, #4
 273 0064 0748     		ldr	r0, .L12+16
 274 0066 FFF7FEFF 		bl	HAL_UART_Transmit
 275              	.LVL16:
 120:Core/Src/main.c ****         /* USER CODE END WHILE */
 276              		.loc 1 120 9 view .LVU76
 277 006a 4FF47A70 		mov	r0, #1000
 278 006e FFF7FEFF 		bl	HAL_Delay
 279              	.LVL17:
 280              	.LBE6:
 102:Core/Src/main.c ****         if (HAL_SPI_Transmit(&hspi1, &tx_buffer, 1, 1000) != HAL_OK) {
ARM GAS  /tmp/ccsHMghP.s 			page 14


 281              		.loc 1 102 11 view .LVU77
 282 0072 D7E7     		b	.L10
 283              	.L13:
 284              		.align	2
 285              	.L12:
 286 0074 00000000 		.word	rx_buffer
 287 0078 00000000 		.word	tx_buffer
 288 007c 00000000 		.word	hspi1
 289 0080 00000000 		.word	.LC0
 290 0084 00000000 		.word	hlpuart1
 291              		.cfi_endproc
 292              	.LFE135:
 294              		.global	tx_buffer
 295              		.section	.bss.tx_buffer,"aw",%nobits
 298              	tx_buffer:
 299 0000 00       		.space	1
 300              		.global	rx_buffer
 301              		.section	.bss.rx_buffer,"aw",%nobits
 304              	rx_buffer:
 305 0000 00       		.space	1
 306              		.text
 307              	.Letext0:
 308              		.file 3 "/home/kalsifer/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 309              		.file 4 "/home/kalsifer/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 310              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
 311              		.file 6 "/home/kalsifer/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 312              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 313              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 314              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 315              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_spi.h"
 316              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 317              		.file 12 "Core/Inc/spi.h"
 318              		.file 13 "Core/Inc/usart.h"
 319              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 320              		.file 15 "/home/kalsifer/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm
 321              		.file 16 "Core/Inc/gpio.h"
 322              		.file 17 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 323              		.file 18 "<built-in>"
ARM GAS  /tmp/ccsHMghP.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccsHMghP.s:21     .text.Error_Handler:00000000 $t
     /tmp/ccsHMghP.s:27     .text.Error_Handler:00000000 Error_Handler
     /tmp/ccsHMghP.s:59     .text.SystemClock_Config:00000000 $t
     /tmp/ccsHMghP.s:65     .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccsHMghP.s:181    .rodata.main.str1.4:00000000 $d
     /tmp/ccsHMghP.s:185    .text.main:00000000 $t
     /tmp/ccsHMghP.s:191    .text.main:00000000 main
     /tmp/ccsHMghP.s:286    .text.main:00000074 $d
     /tmp/ccsHMghP.s:304    .bss.rx_buffer:00000000 rx_buffer
     /tmp/ccsHMghP.s:298    .bss.tx_buffer:00000000 tx_buffer
     /tmp/ccsHMghP.s:299    .bss.tx_buffer:00000000 $d
     /tmp/ccsHMghP.s:305    .bss.rx_buffer:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_SPI1_Init
MX_LPUART1_UART_Init
HAL_SPI_Transmit
HAL_Delay
HAL_SPI_Receive
snprintf
HAL_UART_Transmit
hspi1
hlpuart1
